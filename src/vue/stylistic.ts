// generated by scripts/vue-rules.ts
import type { Linter } from 'eslint'
export default {
    "vue/array-bracket-newline": [
        "warn",
        "consistent"
    ],
    "vue/array-bracket-spacing": [
        "warn",
        "never"
    ],
    "vue/array-element-newline": [
        "warn",
        "consistent"
    ],
    "vue/arrow-spacing": [
        "warn",
        {
            "before": true,
            "after": true
        }
    ],
    "vue/block-spacing": [
        "warn",
        "always"
    ],
    "vue/brace-style": [
        "warn",
        "1tbs",
        {
            "allowSingleLine": true
        }
    ],
    "vue/comma-dangle": [
        "warn",
        "always-multiline"
    ],
    "vue/comma-spacing": [
        "warn",
        {
            "before": false,
            "after": true
        }
    ],
    "vue/comma-style": [
        "warn",
        "last"
    ],
    "vue/dot-location": [
        "warn",
        "property"
    ],
    "vue/func-call-spacing": [
        "warn",
        "never"
    ],
    "vue/key-spacing": [
        "warn",
        {
            "beforeColon": false,
            "afterColon": true
        }
    ],
    "vue/no-extra-parens": [
        "warn",
        "all"
    ],
    "vue/no-multi-spaces": [
        "warn"
    ],
    "vue/object-curly-newline": [
        "warn",
        {
            "multiline": true
        }
    ],
    "vue/object-curly-spacing": [
        "warn",
        "always"
    ],
    "vue/object-property-newline": [
        "warn",
        {
            "allowAllPropertiesOnSameLine": true
        }
    ],
    "vue/operator-linebreak": [
        "warn",
        "before"
    ],
    "vue/quote-props": [
        "warn",
        "consistent-as-needed"
    ],
    "vue/space-in-parens": [
        "warn",
        "never"
    ],
    "vue/space-infix-ops": [
        "warn"
    ],
    "vue/space-unary-ops": [
        "warn",
        {
            "words": true,
            "nonwords": false
        }
    ],
    "vue/template-curly-spacing": [
        "warn",
        "never"
    ]
} as Linter.RulesRecord
